// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnica.Models.Entity;

#nullable disable

namespace PruebaTecnica.Migrations
{
    [DbContext(typeof(EducationalInstitutionContext))]
    [Migration("20230127032301_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Course", b =>
                {
                    b.Property<int>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCourse"));

                    b.Property<string>("Course1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Course");

                    b.HasKey("IdCourse");

                    b.ToTable("COURSE", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Rating", b =>
                {
                    b.Property<int>("IdRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRating"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCourse")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating1")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Rating");

                    b.HasKey("IdRating");

                    b.HasIndex("IdCourse");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdTeacher");

                    b.ToTable("RATING", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<int>("IdentifactionNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdStudent");

                    b.ToTable("STUDENT", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Teacher", b =>
                {
                    b.Property<int>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacher"));

                    b.Property<int>("IdIdentificationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdTeacher");

                    b.ToTable("TEACHER", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Rating", b =>
                {
                    b.HasOne("PruebaTecnica.Models.Entity.Tables.Course", "IdCourseNavigation")
                        .WithMany("Ratings")
                        .HasForeignKey("IdCourse")
                        .IsRequired()
                        .HasConstraintName("FK_RATING_COURSE");

                    b.HasOne("PruebaTecnica.Models.Entity.Tables.Student", "IdStudentNavigation")
                        .WithMany("Ratings")
                        .HasForeignKey("IdStudent")
                        .IsRequired()
                        .HasConstraintName("FK_RATING_STUDENT");

                    b.HasOne("PruebaTecnica.Models.Entity.Tables.Teacher", "IdTeacherNavigation")
                        .WithMany("Ratings")
                        .HasForeignKey("IdTeacher")
                        .IsRequired()
                        .HasConstraintName("FK_RATING_TEACHER");

                    b.Navigation("IdCourseNavigation");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Course", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Student", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("PruebaTecnica.Models.Entity.Tables.Teacher", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
